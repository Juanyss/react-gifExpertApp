{"version":3,"sources":["components/CategoryAdd.js","helpers/getGifs.js","components/GifGridImage.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["CategoryAdd","setCategories","useState","inputValue","setInputValue","lastValue","setLastValue","onSubmit","e","preventDefault","trim","length","values","type","value","onChange","target","getGifs","category","a","url","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridImage","props","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAiBA,OACI,uBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBACEN,EAAWO,OAAOC,OAAS,IAC3BV,GAAc,SAACW,GAAD,OAAcT,GAAd,mBAA4BS,OAC1CN,EAAaH,GACbC,EAAc,MAOlB,UAEI,qDAAwBC,EAAxB,OACA,uBAAOQ,KAAK,OACZC,MAAQX,EACRY,SArBkB,SAAEP,GACxBJ,EAAeI,EAAEQ,OAAOF,c,+BCTnBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCF,EADnC,+DAEAG,MAAOD,GAFP,cAEbE,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACFC,GAAID,EAAIC,GACTC,MAAOF,EAAIE,MACXT,IAAG,UAAEO,EAAIG,cAAN,aAAE,EAAYC,iBAAiBX,QATvB,kBAYZK,GAZY,4CAAH,sDCEPO,EAAe,SAACC,GACzB,OACI,sBAAKC,UAAU,6CAAf,UACI,qBAAKC,IAAKF,EAAMb,IAAKgB,IAAMH,EAAMJ,QACjC,kCAAKI,EAAMJ,MAAX,WCFCQ,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAErB,ECHwB,SAACA,GACzB,MAA0BhB,mBAAS,CAC/BsB,KAAM,GACNc,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXAC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAK,SAAAC,GACnBC,YAAW,WACPJ,EAAS,CACLhB,KAAMmB,EACNL,SAAS,MAEd,UAET,CAACpB,IAEIqB,EDduBM,CAAa3B,GAA/BY,EAAZ,EAAON,KAAYc,EAAnB,EAAmBA,QACnB,OACI,qCACA,qBAAIJ,UAAU,6CAAd,cAA6DhB,EAA7D,OAEEoB,GAAW,6CAEb,qBAAKJ,UAAU,YAAf,SAEOJ,EAAOJ,KAAK,SAAAC,GAAG,OACb,cAAC,EAAD,eAEOA,GADEA,EAAIC,aEbjBkB,EAAe,WAExB,MAAoC5C,mBAAS,CAAC,cAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAKA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ8C,EAAWrB,KAAK,SAAAR,GACZ,OAAO,cAAC,EAAD,CAEFA,SAAUA,GADLA,Y,MCdlC8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.03127ff7.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const CategoryAdd = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [lastValue, setLastValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue (e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if( inputValue.trim().length > 2){\r\n            setCategories((values) => [ inputValue,...values] );\r\n            setLastValue(inputValue);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    return (        \r\n        <form onSubmit={handleSubmit} >\r\n            \r\n            <h1>Last value writed: {lastValue} </h1>\r\n            <input type=\"text\" \r\n            value={ inputValue } \r\n            onChange={ handleInputChange } />\r\n        </form>    \r\n    )\r\n}\r\n\r\nCategoryAdd.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${category}&limit=10&api_key=cS0MKxirB7wrlEFq5VoUq7r7smbtjf3h`;\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n             id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })        \r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridImage = (props) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInDown\">\r\n            <img src={props.url} alt={ props.title}></img>\r\n            <p> {props.title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import { useFetchGifs } from 'hooks/useFetchGifs'\r\nimport React from 'react'\r\nimport { GifGridImage } from './GifGridImage';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images,loading} = useFetchGifs(category);\r\n    return (\r\n        <>\r\n        <h3 className='card animate__animated animate__fadeInLeft'> {category} </h3>\r\n\r\n        { loading && <p> Loading... </p> }\r\n        \r\n        <div className=\"card-grid\">           \r\n           {           \r\n               images.map( img => (    \r\n                 <GifGridImage \r\n                    key={ img.id }\r\n                    {...img}\r\n                 /> \r\n               ))\r\n            }           \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { getGifs } from \"helpers/getGifs\"\r\nimport { useEffect, useState } from \"react\"\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading:true\r\n    })\r\n\r\n    useEffect(() => {\r\n        getGifs(category).then(imgs => {\r\n            setTimeout(() => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            }, 500);            \r\n        })\r\n    },[category])\r\n\r\n    return state;\r\n}","import { CategoryAdd } from 'components/CategoryAdd';\r\nimport { GifGrid } from 'components/GifGrid';\r\nimport React, { useState } from 'react'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Piece']);\r\n    // const handleAdd = () => {\r\n    //     setCategories( [...categories,'Lizards'] );\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <CategoryAdd setCategories={setCategories} />\r\n            <hr />            \r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => {\r\n                        return <GifGrid\r\n                             key={category}\r\n                             category={category}\r\n                             />;\r\n                    })\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {GifExpertApp} from './GifExpertApp'\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,  \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}